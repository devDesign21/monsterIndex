{"version":3,"sources":["logo.svg","components/card/card.jsx","components/card-list/cardList.jsx","components/searchBox/searchBox.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","onSearchChange","event","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filteredMonster","filter","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"oRAAe,I,wBCGFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAM,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACxB,6BAAKL,EAAMI,QAAQE,OAEnB,kCAAKN,EAAMI,QAAQG,MAAnB,WCJKC,EAAW,SAAAR,GACrB,OAAO,qBAAKC,UAAY,YAAjB,SACDD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,UCHpBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOZ,UAAY,SAClBa,KAAK,SACLF,YAAeA,EACfG,SAAYF,MC4CFG,E,kDA7Cb,aAAe,IAAD,8BACZ,gBAeFC,eAAiB,SAAAC,KAhBH,EAoBdL,aAAe,SAACM,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAlBrC,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAc,IAEhB,EAAKR,aAAe,EAAKA,aAAaY,KAAlB,gBAPR,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACX,SAAWqB,S,oBAa7C,WACE,MAAgCC,KAAKP,MAA9Bf,EAAP,EAAOA,SAAUY,EAAjB,EAAiBA,YACXW,EAAkBvB,EAASwB,QAAO,SAAA7B,GAAO,OAC7CA,EAAQE,KAAK4B,cAAcC,SAASd,EAAYa,kBAElD,OACE,sBAAKjC,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CACEW,YAAc,kBACdC,aAAgBkB,KAAKlB,eAEvB,cAAC,EAAD,CAAUJ,SAAYuB,W,GAtCZI,aCAlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f14a5e57.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './cardStyle.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className = 'card-container'>\r\n        <img alt = \"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=150x150`} />\r\n        <h2>{props.monster.name}</h2>\r\n\r\n        <p> {props.monster.email} </p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './cardListStyle.css';\r\nimport {Card} from '../card/card.jsx';\r\n\r\nexport const CardList = props => {\r\n   return <div className = 'card-list'>\r\n        {props.monsters.map(monster => (\r\n            <Card key = {monster.id} monster = {monster}/>\r\n        ))}\r\n   </div>\r\n};","import React from 'react'\r\nimport './searchBoxStyle.css'\r\n\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input className = 'search'\r\n     type='search'\r\n     placeholder = {placeholder} \r\n     onChange = {handleChange}\r\n    />\r\n);","import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react';\nimport {CardList} from  './components/card-list/cardList.jsx';\nimport {SearchBox} from  './components/searchBox/searchBox.jsx';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField : ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters : users}));;\n\n  }\n\n  onSearchChange = event => {\n\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonster = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monster Index</h1>\n        <SearchBox \n          placeholder = 'search monsters'\n          handleChange = {this.handleChange}\n        />\n        <CardList monsters = {filteredMonster}/> \n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));;\n//ServiceWorker.unregister();\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}